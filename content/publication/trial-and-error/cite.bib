@inproceedings{10.1145/3491102.3501895,
 abstract = {Despite an abundance of carefully-crafted tutorials, trial-and-error remains many peopleâ€™s preferred way to learn complex software. Yet, approaches to facilitate trial-and-error (such as tooltips) have evolved very little since the 1980s. While existing mechanisms work well for simple software, they scale poorly to large feature-rich applications. In this paper, we explore new techniques to support trial-and-error in complex applications. We identify key benefits and challenges of trial-and-error, and introduce a framework with a conceptual model and design space. Using this framework, we developed three techniques: ToolTrack to keep track of trial-and-error progress; ToolTrip to go beyond trial-and-error of single commands by highlighting related commands that are frequently used together; and ToolTaste to quickly and safely try commands. We demonstrate how these techniques facilitate trial-and-error, as illustrated through a proof-of-concept implementation in the CAD software Fusion&nbsp;360. We conclude by discussing possible scenarios and outline directions for future research on trial-and-error.},
 address = {New York, NY, USA},
 articleno = {381},
 author = {Masson, Damien and Vermeulen, Jo and Fitzmaurice, George and Matejka, Justin},
 booktitle = {Proceedings of the 2022 CHI Conference on Human Factors in Computing Systems},
 doi = {10.1145/3491102.3501895},
 isbn = {9781450391573},
 keywords = {design space, technique, conceptual model, trial-and-error, learning by exploration, software learning},
 location = {New Orleans, LA, USA},
 numpages = {13},
 publisher = {Association for Computing Machinery},
 series = {CHI '22},
 title = {Supercharging Trial-and-Error for Learning Complex Software Applications},
 url = {https://doi.org/10.1145/3491102.3501895},
 year = {2022}
}

